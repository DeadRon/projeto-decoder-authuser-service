server:
  port: 8087
#  defini um context-path de /ead-authuser/. O serviço agora
#  espera receber requisições que tenham /ead-authuser/ como parte do caminho da URL.
  servlet:
    context-path: '/ead-authuser/'

spring:
  application:
    name: ead-authuser-service
  datasource:
    url:  jdbc:postgresql://localhost:5432/ead-authuser
    username: postgres
    password: postgres
  jpa:
    hibernate:
      ddl-auto: update
      dialect: org.hibernate.dialect.PostgreSQLDialect
      jdbc:
        lob.non-contextual-creation: true
    properties:
      hibernate:
        show_sql: true
  output:
    ansi:
      enabled: Always
  # Conecta este serviço com a instância de rabbitmq criado em https://api.cloudamqp.com/console/1059565f-9ad0-4389-ad5b-74649522039a/details
  rabbitmq:
    addresses: amqps://nxohpdhb:swPoiBHgBXI2kNlhOpLm5Sm7OSKraWMN@shark.rmq.cloudamqp.com/nxohpdhb


logging:
  level:
    com.ead: TRACE
    root: INFO
    org.springframework.web: DEBUG
    org.hibernate: INFO

ead:
  api:
    url:
      course: 'http://ead-course-service/ead-course'

#Configurações do eureka para este microserviço encontrar o Service Registry e poder se registrar
eureka:
  client:
    serviceUrl:
      defautlZone: 'http://localhost:8761/eureka'
    instance:
      hostname: localhost